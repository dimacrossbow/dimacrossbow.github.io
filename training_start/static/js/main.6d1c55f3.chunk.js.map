{"version":3,"sources":["components/header/CHeaderLogo.js","components/header/CHeaderNavigator.js","components/header/CHeader.js","components/main/CBanner.js","pages/MainPage.js","domain/entity/training/TrainingCurrent.js","domain/core/System.js","domain/entity/BaseEntity.js","domain/entity/shot.js","domain/entity/training/TrainingDay.js","domain/entity/training/TrainingDayService.js","components/interface/CInfoBox.js","components/interface/CTimer.js","domain/core/Enum.js","domain/entity/trainingParams/EWeaponTypes.js","components/main/training/CTarget.js","components/interface/CDataChart.js","components/main/training/trainingStart/CTrainingStartDayStat.js","domain/entity/trainingParams/TrainingParamsBase.js","domain/entity/target/ETargetType.js","domain/entity/target/Target.js","domain/entity/trainingParams/TrainingParamsBow.js","domain/entity/trainingParams/TrainingParamsCrossbow.js","domain/entity/trainingParams/TrainingParams.js","domain/entity/training/Training.js","domain/entity/training/TrainingService.js","components/main/training/trainingStart/CTrainingStartFullStat.js","pages/InTrain.js","domain/entity/weapon/Weapon.js","domain/entity/weapon/EWeaponBowsType.js","domain/entity/weapon/EWeaponCrossbowsType.js","mock.js","components/main/training/trainingCreate/CTrainingCreateWeapon.js","components/interface/CRanger.js","components/interface/CInput.js","components/interface/CImageSelect.js","components/main/training/trainingCreate/CTrainingCreateParamsBow.js","domain/entity/trainingParams/EBowTypes.js","components/main/training/trainingCreate/CTrainingCreateParamsCrossbow.js","domain/entity/trainingParams/ECrossbowTypes.js","components/main/training/trainingCreate/CTrainingCreate.js","components/main/training/trainingList/CTrainingListItemBow.js","components/main/training/trainingList/CTrainingListItemCrossbow.js","components/main/training/trainingList/CTrainingListEmpty.js","components/interface/CDialog.js","components/main/training/trainingList/CTrainingList.js","pages/Training.js","config.js","pages/Auth.js","components/footer/CFooter.js","App.js","reportWebVitals.js","index.js"],"names":["CHeaderLogo","props","name","className","src","this","image","React","Component","CShowHeaderNavigator","currentLocation","window","location","pathname","navigator","map","item","route","href","menu","CHeaderNavigator","filter","CHeader","config","pages","Banner","Carousel","fill","play","fit","MainPage","title","TrainingCurrent","obj","trainingParamsUuid","isTrainingDayOpen","System","Math","random","toString","substr","aSeconds","hours","trunc","minutes","seconds","concat","point1","point2","round","sqrt","x","y","BaseEntity","uuid","shot","radius","TrainingDay","shots","time","push","indexShot","findIndex","splice","TrainingDayService","trainingDay","length","accuracyData","rangeBetweenPoint","countAccuracyData","reduce","sum","current","CInfoBox","Box","Text","label","value","CTimer","state","isPlaying","bind","setState","timerId","setInterval","clearInterval","secondsToTime","Enum","entries","Object","key","freeze","EWeaponTypes","WEAPON_TYPE_BOW","WEAPON_TYPE_CROSSBOW","Ð¡Target","updateCanvas","onTargetClick","target","refs","targetCanvas","getContext","img","Image","trainingParams","weaponType","trainingParamsBow","targetType","trainingParamsCrossbow","onload","drawImage","forEach","beginPath","arc","PI","fillStyle","lineWidth","strokeStyle","stroke","e","getBoundingClientRect","rect","clientX","left","clientY","top","preventDefault","onSetShot","componentDidUpdate","onClick","id","ref","width","height","CDataChart","data","index","accuracy","amt","margin","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","strokeDasharray","type","fillOpacity","CTrainingStartDayStat","closeTraining","currentDay","displayCurrentTime","displayCurrentShot","displayCurrentAverageAccuracy","displayCurrentAccuracyData","trainingCurrent","localStorage","getItem","training","JSON","parse","trainingListStr","trainingList","find","timer","reset","_","last","days","getTime","setItem","stringify","onUpdate","assign","currentDayService","countShots","countAverageAccuracy","Grid","columns","rows","gap","areas","start","end","gridArea","pad","TrainingParamsBase","ETargetType","TARGET_TYPE_CLASSIC_ARCHERY","TARGET_TYPE_SOLID_RED","Target","icon","TrainingParamsBow","range","rangeMin","rangeMax","TrainingParamsCrossbow","TrainingParams","Training","day","TrainingService","trainingDayService","Number","CTrainingStartFullStat","displayTotalTime","displayTotalDays","displayTotalShots","displayTotalAccuracy","displayAccuracyData","trainingService","countTotalTime","countDays","countTotalShots","InTrain","isTrainingOpen","openTraining","update","Weapon","EWeaponBowsType","WEAPON_BOWS_TYPE_RECURVE","WEAPON_BOWS_TYPE_COMPOUND","EWeaponCrossbowsType","WEAPON_CROSSBOWS_TYPE_RECURVE","WEAPON_CROSSBOWS_TYPE_COMPOUND","Mock","trainingParamsList","trainingTargetList","trainingWeaponBowsList","trainingWeaponCrossbowsList","CTrainingCreateWeapon","handleChoose","selectTrainingParams","style","background","onChoose","CRanger","useState","setValue","unit","Heading","textAlign","color","level","RangeInput","min","max","step","onChange","event","CInput","TextInput","placeholder","CImageSelect","first","useEffect","CTrainingCreateParamsBow","BOW_TYPE_RECURVE","BOW_TYPE_COMPOUND","saveTraining","changeName","chooseTarget","chooseWeapon","changeRange","CTrainingCreateParamsCrossbow","CROSSBOW_TYPE_RECURVE","CROSSBOW_TYPE_COMPOUND","ShowTrainingParams","CTrainingCreate","createTraining","params","document","CTrainingListItemBow","deleteTrainingParams","onDelete","backgroundImage","CTrainingListItemCrossbow","CTrainingListEmpty","size","text","CDialog","onConfirm","onClose","show","Card","CardBody","paddingBottom","Form","message","Button","CTrainingList","showDeleteDialog","closeDeleteDialog","trainingParamsIndex","ShowTab","mode","switchMode","component","selected","CFooter","Anchor","hoverIndicator","App","exact","path","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d1c55f3.chunk.js","sourcesContent":["import React from 'react';\n\nexport class CHeaderLogo extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div name=\"paragMain\" className=\"container-fluid logo-block\">\n                <img className=\"logo\" src={this.props.image}></img>\n            </div>\n        )\n    }\n}","import React from 'react'\n\nfunction CShowHeaderNavigator(props) {\n    let currentLocation = window.location.pathname\n\n    return (\n        <div className=\"top-menu container-fluid\">  \n            <ul>\n                {props.navigator.map(item => {\n                    return (\n                        <li className={item.route === currentLocation? \"selected\" : \"\"}><a href={item.route}>{item.menu}</a></li>\n                    )\n                })}\n            </ul>\n        </div>  \n    )\n}\n\nexport class CHeaderNavigator extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    /*getTopMenuY() {\n        let topMenu = document.querySelector('.top-menu');\n\n        return (this.getCoords(topMenu).top);\n    }\n\n    getCoords(elem) {\n        let box = elem.getBoundingClientRect();\n\n        return {\n            top: Math.round(box.top + window.pageYOffset),\n            left: Math.round(box.left + window.pageXOffset)\n        };\n    }\n\n    getHeight() {\n        let topMenu = document.querySelector('.top-menu');\n\n        return topMenu.style.height;\n    }\n\n    onScroll() {\n        let scrollY = window.scrollY;\n\n        if (scrollY >= (this.topMenuY+this.topMenuHeight))\n            return true;\n        return false;\n    }  */\n\n    render() {\n        return (\n            <CShowHeaderNavigator navigator={this.props.navigator.filter(item => item.menu)}/>\n        )\n    }\n}","import React from 'react';\nimport {config} from '../../config'\nimport {CHeaderLogo} from './CHeaderLogo'\nimport {CHeaderNavigator} from './CHeaderNavigator'\n\n\nexport class CHeader extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <header>\n                <CHeaderLogo image=\"logo.png\"/>\n                <CHeaderNavigator navigator={config.pages}/>\n            </header>\n        )\n    }\n}","import React from 'react';\nimport {Box, Carousel ,Image, grommet} from 'grommet'\n\nexport class Banner extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <Carousel fill play={3000}>\n                <Image fit=\"cover\" src=\"/banner_1.jpg\" />\n                <Image fit=\"cover\" src=\"/banner_2.jpg\" />\n                <Image fit=\"cover\" src=\"/banner_3.jpg\" />\n            </Carousel>\n        )\n    }\n}","import React from 'react'\nimport { Banner } from '../components/main/CBanner'\nimport {Heading, Text, grommet} from \"grommet\";\n\nexport class MainPage extends React.Component {\n    constructor(props) {\n        super(props)\n\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"container panel\">\n                    <Banner/>\n                </div>\n                <div className=\"container panel\">\n                    <div className=\"about\">\n                        <h1 className=\"about-text\">Ð Ð¿ÑÐ¾ÐµÐºÑÐµ</h1>\n                        <p>\n                            <span className=\"simple-text\">ÐÐ°Ð½Ð½Ð¾Ðµ Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ Ð¿Ð¾Ð¼Ð¾Ð¶ÐµÑ Ð²Ð°Ð¼ Ð² Ð²Ð°ÑÐ¸Ñ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÐ°Ñ Ð¿Ð¾ ÑÑÑÐµÐ»ÑÐ±Ðµ Ð¸Ð· Ð»ÑÐºÐ°, Ð°ÑÐ±Ð°Ð»ÐµÑÐ° Ð¸ Ñ.Ð´. ÐÑ ÑÐ¼Ð¾Ð¶ÐµÑÐµ Ð¾ÑÐ¼ÐµÑÐ°ÑÑ Ð¿Ð¾Ð¿Ð°Ð´Ð°Ð½Ð¸Ñ, Ð²ÐµÐ·ÑÐ¸ ÑÑÐ°ÑÐ¸ÑÑÐ¸ÐºÑ Ð²ÑÑÑÑÐµÐ»Ð¾Ð², Ð° ÑÐ°ÐºÐ¶Ðµ Ð²ÑÐ¿Ð¾Ð»Ð½ÑÑÑ Ð²ÑÐµÐ²Ð¾Ð·Ð¼Ð¾Ð¶Ð½ÑÐµ Ð·Ð°Ð´Ð°Ð½Ð¸Ñ Ð¿Ð¾ ÑÑÑÐµÐ»ÑÐ±Ðµ</span>\n                        </p>\n                    </div>\n                </div>\n                <div className=\"container panel\">\n                    <div className=\"about\">\n                        <h1 className=\"about-text\">ÐÐ»Ð°Ð³Ð¾Ð´Ð°ÑÐ½Ð¾ÑÑÑ</h1>\n                        <p>\n                            <span className=\"simple-text\">Ð¥Ð¾ÑÑ Ð²ÑÑÐ°Ð·Ð¸ÑÑ Ð±Ð»Ð°Ð³Ð¾Ð´Ð°ÑÐ½Ð¾ÑÑÑ Ð¾Ð±ÑÐ°Ð·Ð¾Ð²Ð°ÑÐµÐ»ÑÐ½Ð¾Ð¼Ñ ÑÐµÐ½ÑÑÑ <a className=\"simple-link\" title=\"Ð¡Ð°Ð¹Ñ ÑÐµÐ½ÑÑÐ°\" href=\"https://www.specialist.ru/\">\"Ð¡Ð¿ÐµÑÐ¸Ð°Ð»Ð¸ÑÑ\"</a> Ð·Ð° ÑÐ´Ð¾Ð±Ð½ÑÐµ Ð¸ ÐºÐ°ÑÐµÑÑÐ²ÐµÐ½Ð½ÑÐµ ÐºÑÑÑÑ.</span>\n                        </p>\n                        <p>\n                            <span className=\"simple-text\">ÐÑÐ¾Ð±ÐµÐ½Ð½Ð¾ ÑÐ¾ÑÑ Ð¿Ð¾Ð±Ð»Ð°Ð³Ð¾Ð´Ð°ÑÐ¸ÑÑ <a className=\"simple-link\" title=\"Ð¡ÑÑÐ°Ð½Ð¸ÑÐ° Ð¿ÑÐµÐ¿Ð¾Ð´Ð°Ð²Ð°ÑÐµÐ»Ñ\" href=\"https://www.specialist.ru/trainer/%d1%82%d1%80%d0%b0%d1%81\">Ð¢Ð°ÑÐ°ÑÐ¾Ð²Ð° ÐÐ»ÐµÐºÑÐµÑ ÐÐ»Ð°Ð´Ð¸Ð¼Ð¸ÑÐ¾Ð²Ð¸ÑÐ°</a> - Ð³ÑÐ°Ð¼Ð¾ÑÐ½Ð¾Ð³Ð¾ Ð¿ÑÐµÐ¿Ð¾Ð´Ð°Ð²Ð°ÑÐµÐ»Ñ, Ð¿ÑÐ¾ÑÐµÑÑÐ¸Ð¾Ð½Ð°Ð»Ð° Ð² Ð¾Ð±Ð»Ð°ÑÑÐ¸ Ð²ÐµÐ±-ÑÐ°Ð·ÑÐ°Ð±Ð¾ÑÐºÐ¸, Ð·Ð° ÐºÐ°ÑÐµÑÑÐ²Ð¾ Ð»ÐµÐºÑÐ¸Ð¹ Ð¸ Ð½ÐµÐ²ÐµÑÐ¾ÑÑÐ½Ð¾Ðµ ÑÐµÑÐ¿ÐµÐ½Ð¸Ðµ, Ð±ÐµÐ· ÐºÐ¾ÑÐ¾ÑÑÑ Ñ Ð±Ñ Ð½Ðµ ÑÐ´ÐµÐ»Ð°Ð» ÑÑÐ¾Ñ Ð¼Ð¸Ð½Ð¸-Ð¿ÑÐ¾ÐµÐºÑ :) </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n    )\n    }\n}","export class TrainingCurrent {\n    trainingParamsUuid = null\n    isTrainingDayOpen = false\n\n    constructor(obj) {\n        if (obj) {\n            this.trainingParamsUuid = obj.trainingParamsUuid ? obj.trainingParamsUuid : null\n            this.isTrainingDayOpen = obj.isTrainingDayOpen ? obj.isTrainingDayOpen : false\n        }\n    }\n}","export default class System {\n    static uuid() {\n        return Math.random().toString(36).substr(2, 9)\n    }\n\n    // ÑÐ´ÐµÐ»Ð°ÑÑ ÑÐ°ÐºÐ¸Ðµ Ð¿Ð°ÑÐ°Ð¼ÐµÑÑÑ Ð´Ð»Ñ Ð²ÑÐµÑ ÑÑÐ½ÐºÑÐ¸Ð¹\n    static secondsToTime(aSeconds) {\n        let hours = Math.trunc(aSeconds / 3600)\n        let minutes = Math.trunc((aSeconds - (hours * 3600)) / 60)\n        let seconds = aSeconds - hours * 3600 - minutes * 60\n\n        hours = hours <= 9 ? \"0\".concat(hours) : hours\n        minutes = minutes <= 9 ? \"0\".concat(minutes) : minutes\n        seconds = seconds <= 9 ? \"0\".concat(seconds) : seconds\n\n        return hours + ':' + minutes + ':' + seconds\n    }\n\n    // ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ Ð¼ÐµÐ¶Ð´Ñ ÑÐ¾ÑÐºÐ°Ð¼Ð¸\n    static rangeBetweenPoint(point1, point2) {\n        return Math.round(((300 - Math.sqrt((point1.x - point2.x) ** 2 + (point1.y - point2.y) ** 2)) / 300 * 100))\n    }\n}","import System from '../core/System'\n\nexport default class BaseEntity {\n    uuid = System.uuid()\n\n    constructor(obj) {\n        if (obj) {\n            this.uuid = obj.uuid ? obj.uuid : System.uuid()\n        }\n    }\n} ","export class shot {\n    x = null\n    y = null\n    radius = null\n\n    constructor(obj) {\n        if (obj) {\n            this.x = obj.x ? obj.x : null\n            this.y = obj.y ? obj.y : null\n            this.radius = obj.radius ? obj.radius : null\n        }\n    }\n}","import BaseEntity from \"../BaseEntity\";\nimport {shot} from \"../shot\";\n\nexport class TrainingDay extends BaseEntity {\n    shots = []\n    time = null\n\n    constructor(obj) {\n        super(obj)\n\n        if (obj) {\n            this.time = obj.time ? obj.time : null\n        }\n    }\n\n    // Ð¾ÑÐ¼ÐµÑÐºÐ° Ð¿Ð¾Ð¿Ð°Ð´Ð°Ð½Ð¸Ñ\n    setShot(shot = null) {\n        if (shot) {\n            this.shots.push(shot)\n        }\n    }\n\n    removeShot(shot = null) {\n        if (shot) {\n            const indexShot = this.shots.findIndex(item => item.uuid === shot.uuid)\n\n            if (indexShot !== -1) {\n                this.shots.splice(indexShot)\n            }\n        }\n    }\n}","import { Training } from \"./TrainingDay\"\nimport System from \"../../core/System\";\n\nexport class TrainingDayService {\n    trainingDay = null\n\n    constructor(trainingDay) {\n        this.trainingDay = trainingDay ? trainingDay : null\n    }\n\n    countShots() {\n        return this.trainingDay.shots.length\n    }\n\n    getTime() {\n        return this.trainingDay.time\n    }\n\n    countAccuracyData(x = 300, y = 300) {\n        const accuracyData = this.trainingDay.shots.map(shot => System.rangeBetweenPoint({x, y}, {x: shot.x, y: shot.y}))\n\n        return accuracyData\n    }\n\n    countAverageAccuracy(x = 300, y = 300) {\n        const accuracyData = this.countAccuracyData(x, y)\n\n        if (accuracyData.length > 0) {\n            return Math.round(accuracyData.reduce(function(sum, current) {\n                return sum + current;\n            }) / accuracyData.length)\n        }\n\n        return null\n    }\n}","import React from 'react'\nimport {Box, Text, Grommet} from 'grommet'\n\nexport class CInfoBox extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <Box className=\"info-box\">\n                <Box className=\"info-box-label\">\n                    <Text className=\"info-box-label-text\">{this.props.label}</Text>\n                </Box>\n                <Box className=\"info-box-value\">\n                    <Text className=\"info-box-value-text\">{this.props.value}</Text>\n                </Box>\n            </Box>\n        )\n    }\n}","import React from 'react'\nimport System from '../../domain/core/System'\nimport {Box, Text, Grommet} from 'grommet'\n\nexport class CTimer extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            time: 0,\n            isPlaying: false\n        }\n\n        this.play = this.play.bind(this)\n    } \n\n    getTime() {\n        return this.state.time\n    }\n\n    stop() {\n        this.setState({isPlaying: false})\n    }\n\n    reset() {\n        this.setState({time: 0})\n    }\n\n    play() {\n        this.setState({isPlaying: true})\n\n        let timerId = setInterval(() => {\n            if (this.state.isPlaying) {\n                this.setState({time: this.state.time + 1})\n            }\n\n            if (!this.state.isPlaying) {\n                clearInterval(timerId)\n            }\n        }, 1000);\n    }\n\n    render() {\n        return (\n            <Box className=\"timer\">\n                <Text className=\"timer-text\">{System.secondsToTime(this.state.time)}</Text>\n            </Box>\n        )\n    }\n}","export default class Enum {\n    #entries = []\n\n    constructor(obj) {\n        if (obj && typeof obj == 'object') {\n            const entries = Object.entries(obj)\n\n            this.#entries = entries\n\n            for (const [key, value] of entries) {\n                this[key] = value\n            }\n\n            Object.freeze(this)\n        }\n    }\n\n    entries() {\n        return this.#entries\n    }\n}","import Enum from '../../core/Enum'\n\nexport const EWeaponTypes = new Enum({\n    WEAPON_TYPE_BOW: \"bow\",\n    WEAPON_TYPE_CROSSBOW: \"crossbow\"\n})","import React from 'react'\nimport { shot } from '../../../domain/entity/shot'\nimport { EWeaponTypes } from '../../../domain/entity/trainingParams/EWeaponTypes'\n\nexport class Ð¡Target extends React.Component {\n    \n\n    constructor(props) {\n        super(props)\n        this.state = {\n            shots: []\n        }\n\n        this.updateCanvas = this.updateCanvas.bind(this)\n        this.onTargetClick = this.onTargetClick.bind(this)\n    }\n\n    componentDidMount() {\n        this.updateCanvas()\n    }\n\n    componentDidUpdate() {\n        this.updateCanvas()\n    }\n\n    updateCanvas() {\n        const target = this.refs.targetCanvas.getContext('2d')\n        const img = new Image()\n\n        if (this.props.trainingParams.weaponType === EWeaponTypes.WEAPON_TYPE_BOW) {\n            img.src = this.props.trainingParams.trainingParamsBow.targetType.image\n        }\n\n        if (this.props.trainingParams.weaponType === EWeaponTypes.WEAPON_TYPE_CROSSBOW) {\n            img.src = this.props.trainingParams.trainingParamsCrossbow.targetType.image\n        }       \n\n        img.onload = () => {\n            target.drawImage(img, 0, 0, 600, 600)\n\n            this.state.shots.forEach(shot => {\n                target.beginPath()\n                target.arc(shot.x, shot.y, shot.radius, 0, 2*Math.PI, false)\n\t            target.fillStyle = 'rgba(100,150,185,0.5)'\n\t            target.fill()\n\t            target.lineWidth = 1\n\t            target.strokeStyle = 'black'\n                target.stroke()\n                \n                target.beginPath()\n                target.arc(shot.x, shot.y, 1, 0, 2*Math.PI, false)\n\t            target.fillStyle = 'black'\n\t            target.fill()\n\t            target.lineWidth = 1\n\t            target.strokeStyle = 'black'\n\t            target.stroke()\n            });\n        };\n    }\n\n    async onTargetClick(e) {\n        const target = await this.refs.targetCanvas\n        const rect = await target.getBoundingClientRect()\n        const x = await e.clientX - rect.left\n        const y = await e.clientY - rect.top\n\n        e.preventDefault()\n\n        await this.setState({\n            shots: this.state.shots.concat(new shot({x, y, radius: 10}))\n        })\n\n        this.props.onSetShot(this.state.shots)\n\n        await this.componentDidUpdate()\n    }\n\n    render() {\n        return (\n            <canvas onClick={this.onTargetClick} id=\"targetCanvas\" ref=\"targetCanvas\" width={600} height={600}/>\n        )\n    }\n}","import React from 'react';\n/*import {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n*/\nimport {\n    AreaChart, defs, linearGradient, stop, XAxis, YAxis, CartesianGrid, Area, Tooltip\n} from 'recharts';\n\nexport const CDataChart = (props) => {\n    return (\n        <div>\n        {props.data.length > 0 &&\n        <AreaChart width={1100} height={250} data={props.data.map((item, index) => {return ({name: \"ÑÐ¾ÑÐ½Ð¾ÑÑÑ \".concat(item.toString()).concat(\"%\"), accuracy: item, amt: 100}) } )}\n  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n  <defs>\n\n    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n    </linearGradient>\n  </defs>\n  <XAxis dataKey=\"name\" />\n  <YAxis />\n  <CartesianGrid strokeDasharray=\"3 3\" />\n  <Tooltip />\n  <Area type=\"monotone\" dataKey=\"accuracy\" stroke=\"#ffffff\" fillOpacity={1} fill=\"url(#colorUv)\" />\n</AreaChart> }\n</div>\n    );\n}","import React from 'react'\nimport System from '../../../../domain/core/System'\nimport { TrainingCurrent } from '../../../../domain/entity/training/TrainingCurrent'\nimport { TrainingDay } from '../../../../domain/entity/training/TrainingDay'\nimport { TrainingDayService } from '../../../../domain/entity/training/TrainingDayService'\nimport { CInfoBox } from '../../../interface/CInfoBox'\nimport { CTimer } from '../../../interface/CTimer'\nimport { Ð¡Target } from '../../../main/training/CTarget'\nimport { CDataChart } from \"../../../interface/CDataChart\"\nimport {Box, Grid, Heading} from \"grommet\"\nimport _ from 'lodash'\n\nexport class CTrainingStartDayStat extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            trainingParams: null,\n        }\n\n        this.onSetShot = this.onSetShot.bind(this)\n        this.closeTraining = this.closeTraining.bind(this)\n        this.currentDay = this.currentDay.bind(this)\n        this.displayCurrentTime = this.displayCurrentTime.bind(this)\n        this.displayCurrentShot = this.displayCurrentShot.bind(this)\n        this.displayCurrentAverageAccuracy = this.displayCurrentAverageAccuracy.bind(this)\n        this.displayCurrentAccuracyData = this.displayCurrentAccuracyData.bind(this)\n    }\n\n    async componentWillMount() {\n        const trainingCurrent = localStorage.getItem('trainingCurrent')\n        \n        if (trainingCurrent) {\n            const training = new TrainingCurrent(JSON.parse(trainingCurrent))\n         \n            // Ð¿Ð¾Ð»ÑÑÐ°ÐµÐ¼ ÑÐ¿Ð¸ÑÐ¾Ðº ÑÐ¾Ð·Ð´Ð°Ð½Ð½ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²Ð¾Ðº\n            const trainingListStr = localStorage.getItem('trainingList')\n\n            if (trainingListStr) {\n                const trainingList = JSON.parse(trainingListStr)\n\n                const trainingParams = trainingList.find(trainingParams => trainingParams.uuid === training.trainingParamsUuid)\n\n                if (trainingParams) {\n                    await this.setState({trainingParams})\n                }\n            }\n        }    \n    }\n\n    componentDidMount() {\n        this.refs.timer.reset()\n        this.refs.timer.play()       \n    }\n\n    async componentWillUnmount() {\n        //await this.closeTraining()\n    }\n\n    //\n    currentDay() {\n        if (this.state.trainingParams) {\n            return _.last(this.state.trainingParams.days)\n        }\n\n        return null\n    }\n\n    async closeTraining() {\n        if (this.state.trainingParams) {\n\n            // Ð¿Ð¾Ð»ÑÑÐ°ÐµÐ¼ ÑÐ¿Ð¸ÑÐ¾Ðº ÑÐ¾Ð·Ð´Ð°Ð½Ð½ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²Ð¾Ðº\n            const trainingListStr = await localStorage.getItem('trainingList')\n\n            if (trainingListStr) {\n                const trainingList = await JSON.parse(trainingListStr)\n\n                const trainingParams = await trainingList.find(trainingParams => trainingParams.uuid === this.state.trainingParams.uuid)\n\n                if (trainingParams) {\n                    const currentDay = this.currentDay()\n\n                    currentDay.time = this.refs.timer.getTime()\n                    trainingParams.days = this.state.trainingParams.days\n\n                    await localStorage.setItem('trainingList', JSON.stringify(trainingList))\n\n                    this.props.onUpdate()\n                }\n            }\n        }\n    }\n\n    async onSetShot(shots) {\n        const trainingParams = await Object.assign(this.state.trainingParams)\n\n        const lastDay = await _.last(trainingParams.days)\n\n        lastDay.shots = shots \n\n        await this.setState({trainingParams})\n    }\n\n    displayCurrentTime() {\n        const currentDay = this.currentDay()\n\n        if (currentDay) {\n            const currentDayService = new TrainingDayService(currentDay)\n\n            return System.secondsToTime(currentDayService.getTime())\n        }\n\n        return \"-\"\n    }\n\n    displayCurrentShot() {\n        const currentDay = this.currentDay()\n\n        if (currentDay) {\n            const currentDayService = new TrainingDayService(currentDay)\n\n            return currentDayService.countShots()\n        }\n\n        return \"-\"\n    }\n\n    displayCurrentAverageAccuracy() {\n        const currentDay = this.currentDay()\n\n        if (currentDay) {\n            const currentDayService = new TrainingDayService(currentDay)\n            const countAverageAccuracy = currentDayService.countAverageAccuracy()\n\n            if (countAverageAccuracy) {\n\n                return countAverageAccuracy.toString().concat(\"%\")\n            }\n        }\n\n        return \"-\"\n    }\n\n    displayCurrentAccuracyData() {\n        const currentDay = this.currentDay()\n\n        if (currentDay) {\n            const currentDayService = new TrainingDayService(currentDay)\n\n            return currentDayService.countAccuracyData()\n        }\n\n        return []       \n    }\n\n    render() {\n        return (\n            <div className=\"container\"> \n                <div className=\"container panel\">\n                    <CTimer ref=\"timer\"/>\n                </div>\n                <div className=\"container panel\">\n                    <Ð¡Target onSetShot={this.onSetShot} trainingParams={this.state.trainingParams}/>\n                    <CDataChart data={this.displayCurrentAccuracyData()}/>\n                </div>\n                <div className=\"container panel\">\n                    <Grid\n                        columns={['auto', 'auto']}\n                        rows={['auto']}\n                        gap=\"small\"\n                        areas={[\n                            { name: 'shots', start: [0, 0], end: [0, 0] },\n                            { name: 'accuracy', start: [1, 0], end: [1, 0] },\n                        ]}\n                        >\n                        <Box gridArea=\"shots\" pad=\"medium\">\n                            <CInfoBox label=\"ÐÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð²ÑÑÑÑÐµÐ»Ð¾Ð²\" value={this.displayCurrentShot()}/>\n                        </Box>\n                        <Box gridArea=\"accuracy\" pad=\"medium\">\n                            <CInfoBox label=\"Ð¢Ð¾ÑÐ½Ð¾ÑÑÑ ÑÑÑÐµÐ»ÑÐ±Ñ\" value={this.displayCurrentAverageAccuracy()}/>\n                        </Box>\n                    </Grid>\n                    </div>\n                <div className=\"container panel\">\n                    <a className=\"btn\" onClick={this.closeTraining}>ÐÐ°Ð²ÐµÑÑÐ¸ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n                </div>\n            </div>\n        )\n    }\n}","import BaseEntity from \"../BaseEntity\";\n\nexport default class TrainingParamsBase extends BaseEntity {\n\n    constructor(obj) {\n        super(obj)\n\n        if (obj) {\n\n        }\n    }\n}","import Enum from '../../core/Enum'\n\nexport const ETargetType = new Enum({\n    TARGET_TYPE_CLASSIC_ARCHERY: \"classic_archery\",\n    TARGET_TYPE_SOLID_RED: \"solid_red\"\n})","import BaseEntity from \"../BaseEntity\"\nimport {ETargetType} from './ETargetType'\n\nexport class Target extends BaseEntity {\n    targetType = ETargetType.TARGET_TYPE_CLASSIC_ARCHERY\n    image = null\n    icon = null\n    label = \"\"\n\n    constructor(obj) {\n        super(obj)\n\n        if (obj) {\n            this.targetType = obj.targetType ? obj.targetType : ETargetType.TARGET_TYPE_CLASSIC_ARCHERY\n            this.image = obj.image ? obj.image : null\n            this.icon = obj.icon ? obj.icon : null\n            this.label = obj.label ? obj.label : \"\"\n        }\n    }\n}","import TrainingParamsBase from \"./TrainingParamsBase\"\nimport {Target} from '../target/Target'\n\n// Ð¿Ð°ÑÐ°Ð¼ÐµÑÑÑ ÑÑÐµÐ½Ð´Ð¾Ð²Ð¾Ð¹ ÑÑÑÐµÐ»ÑÐ±Ñ Ð¸Ð· Ð»ÑÐºÐ°\nexport class TrainingParamsBow extends TrainingParamsBase {\n    range = 0\n    rangeMin = 0\n    rangeMax = 0\n    weaponType = null\n    targetType = null\n\n    constructor(obj) {\n        super(obj)\n        if (obj) {\n            this.range = obj.range ? obj.range : 0\n            this.rangeMin = obj.rangeMin ? obj.rangeMin : 0\n            this.rangeMax = obj.rangeMax ? obj.rangeMax : 0\n            this.weaponType = obj.weaponType ? obj.weaponType : null\n            this.targetType = obj.targetType ? obj.targetType : null\n        }\n    }\n}","import TrainingParamsBase from \"./TrainingParamsBase\"\n\n// Ð¿Ð°ÑÐ°Ð¼ÐµÑÑÑ ÑÑÐµÐ½Ð´Ð¾Ð²Ð¾Ð¹ ÑÑÑÐµÐ»ÑÐ±Ñ Ð¸Ð· Ð°ÑÐ±Ð°Ð»ÐµÑÐ°\nexport class TrainingParamsCrossbow extends TrainingParamsBase {\n    range = 0\n    rangeMin = 0\n    rangeMax = 0\n    weaponType = null\n    targetType = null\n\n    constructor(obj) {\n        super(obj)\n        if (obj) {\n            this.range = obj.range ? obj.range : 0\n            this.rangeMin = obj.rangeMin ? obj.rangeMin : 0\n            this.rangeMax = obj.rangeMax ? obj.rangeMax : 0\n            this.weaponType = obj.weaponType ? obj.weaponType : null\n            this.targetType = obj.targetType ? obj.targetType : null\n        }\n    }\n}","import BaseEntity from \"../BaseEntity\"\nimport {TrainingParamsBow} from \"./TrainingParamsBow\"\nimport {TrainingParamsCrossbow} from \"./TrainingParamsCrossbow\"\nimport {EWeaponTypes} from './EWeaponTypes'\n\nexport class TrainingParams extends BaseEntity {\n    weaponType = EWeaponTypes.WEAPON_TYPE_BOW\n    title = \"\"\n    image = \"\"\n    trainingParamsBow = null\n    trainingParamsCrossbow = null\n\n    constructor(obj) {\n        super(obj)\n\n        if (obj) {\n            this.weaponType = obj.weaponType ? obj.weaponType : EWeaponTypes.WEAPON_TYPE_BOW\n            this.title = obj.title ? obj.title : \"\"\n            this.image = obj.image ? obj.image : \"\"\n            this.trainingParamsBow = obj.trainingParamsBow ? new TrainingParamsBow(obj.trainingParamsBow) : null\n            this.trainingParamsCrossbow = obj.trainingParamsCrossbow ? new TrainingParamsCrossbow(obj.trainingParamsCrossbow) : null\n        }\n    }\n}","import { TrainingParams } from \"../trainingParams/TrainingParams\"\n\nexport class Training extends TrainingParams {\n    name = \"\"\n    days = []\n\n    constructor(obj) {\n        super(obj)\n\n        if (obj) {\n            this.name = obj.name ? obj.name : \"\"\n            this.days = obj.days ? obj.days : []\n        }\n    }\n\n    createDay(day = null) {\n        if (day) {\n            this.days.push(day)\n        }\n    }\n}","import { Training } from \"./Training\"\nimport { TrainingDayService } from './TrainingDayService'\n\nexport class TrainingService {\n    training = null\n\n    constructor(training) {\n        this.training = training ? training : null\n    }\n\n    countDays() {\n        return this.training.days.length\n    }\n\n    countTotalShots() {\n        return this.training.days.reduce(function(sum, currentDay) {\n            const trainingDayService = new TrainingDayService(currentDay)\n\n            return sum + Number(trainingDayService.countShots());\n        }, 0)\n    }\n\n    countTotalTime() {\n        return this.training.days.reduce(function(sum, currentDay) {\n            const trainingDayService = new TrainingDayService(currentDay)\n\n            return sum + trainingDayService.getTime();\n        }, 0)\n    }\n\n    countAverageAccuracy() {\n        if (this.training.days.length > 0) {\n            return Math.round(this.training.days.reduce(function (sum, currentDay) {\n                const trainingDayService = new TrainingDayService(currentDay)\n\n                if (trainingDayService.countAverageAccuracy() !== null) {\n                    return sum + Number(trainingDayService.countAverageAccuracy())\n                }\n\n                return sum\n            }, 0) / this.training.days.length)\n        }\n\n        return null\n    }\n\n    countAccuracyData() {\n        if (this.training.days.length > 0) {\n            return this.training.days.map(day => {\n                const trainingDayService = new TrainingDayService(day)\n\n                if (trainingDayService.countAverageAccuracy()) {\n                    return trainingDayService.countAverageAccuracy()\n                }\n\n                return 0\n            })\n        }\n\n        return []\n    }\n}","import React from 'react'\nimport System from '../../../../domain/core/System'\nimport {Box, Grid, Heading} from \"grommet\"\nimport {TrainingService} from '../../../../domain/entity/training/TrainingService'\nimport {CInfoBox} from '../../../interface/CInfoBox'\nimport {CDataChart} from \"../../../interface/CDataChart\";\nimport {TrainingDayService} from \"../../../../domain/entity/training/TrainingDayService\";\n\nexport class CTrainingStartFullStat extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.displayTotalTime = this.displayTotalTime.bind(this)\n        this.displayTotalDays = this.displayTotalDays.bind(this)\n        this.displayTotalShots = this.displayTotalShots.bind(this)\n        this.displayTotalAccuracy = this.displayTotalAccuracy.bind(this)\n        this.displayAccuracyData = this.displayAccuracyData.bind(this)\n    }\n\n    displayTotalTime() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            return System.secondsToTime(trainingService.countTotalTime())\n        }\n\n        return System.secondsToTime(0)\n    }\n\n    displayTotalDays() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            return trainingService.countDays()\n        }\n\n        return 0\n    }\n\n    displayTotalShots() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            return trainingService.countTotalShots()\n        }\n\n        return \"-\"\n    }\n\n    displayTotalAccuracy() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            if (trainingService.countAverageAccuracy() !== null) {\n                return trainingService.countAverageAccuracy().toString().concat(\"%\")\n            }\n        }\n\n        return \"-\"\n    }\n\n    displayAccuracyData() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            return trainingService.countAccuracyData()\n        }\n\n        return []\n    }\n\n    render() {\n        return (\n            <div className=\"container panel\">\n\n                <CDataChart data={this.displayAccuracyData()}/>\n                <Grid\n                    columns={['auto', 'auto', 'auto']}\n                    rows={['auto','auto']}\n                    gap=\"small\"\n                    areas={[\n                        { name: 'time', start: [0, 0], end: [0, 1] },\n                        { name: 'shots', start: [0, 1], end: [0, 1] },\n                        { name: 'accuracy', start: [1, 1], end: [1, 1] },\n                        { name: 'days', start: [2, 1], end: [2, 1] },\n                    ]}\n                    >\n                    <Box gridArea=\"time\" pad=\"medium\">\n                        <CInfoBox label=\"ÐÐ±ÑÐµÐµ Ð²ÑÐµÐ¼Ñ\" value={this.displayTotalTime()}/>\n                    </Box>\n                    <Box gridArea=\"shots\" pad=\"medium\">\n                        <CInfoBox label=\"ÐÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð²ÑÑÑÑÐµÐ»Ð¾Ð²\" value={this.displayTotalShots()}/>\n                    </Box>\n                    <Box gridArea=\"accuracy\" pad=\"medium\">\n                        <CInfoBox label=\"Ð¢Ð¾ÑÐ½Ð¾ÑÑÑ ÑÑÑÐµÐ»ÑÐ±Ñ\" value={this.displayTotalAccuracy()}/>\n                    </Box>\n                    <Box gridArea=\"days\" pad=\"medium\">\n                        <CInfoBox label=\"ÐÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð´Ð½ÐµÐ¹\" value={this.displayTotalDays()}/>\n                    </Box>\n                </Grid>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { TrainingCurrent } from '../domain/entity/training/TrainingCurrent'\nimport System from '../domain/core/System'\nimport _ from 'lodash'\nimport { TrainingDay } from \"../domain/entity/training/TrainingDay\"\nimport { CTrainingStartDayStat } from '../components/main/training/trainingStart/CTrainingStartDayStat'\nimport { CTrainingStartFullStat } from '../components/main/training/trainingStart/CTrainingStartFullStat'\n\nexport class InTrain extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isTrainingOpen: false,\n            trainingParams: null\n        }\n\n        this.openTraining = this.openTraining.bind(this)\n        this.closeTraining = this.closeTraining.bind(this)\n        this.update = this.update.bind(this)\n    }\n\n    async componentWillMount() {\n        const trainingCurrent = localStorage.getItem('trainingCurrent')\n        \n        if (trainingCurrent) {\n            const training = new TrainingCurrent(JSON.parse(trainingCurrent))\n         \n            // Ð¿Ð¾Ð»ÑÑÐ°ÐµÐ¼ ÑÐ¿Ð¸ÑÐ¾Ðº ÑÐ¾Ð·Ð´Ð°Ð½Ð½ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²Ð¾Ðº\n            const trainingListStr = localStorage.getItem('trainingList')\n\n            if (trainingListStr) {\n                const trainingList = JSON.parse(trainingListStr)\n\n                const trainingParams = trainingList.find(trainingParams => trainingParams.uuid === training.trainingParamsUuid)\n\n                if (trainingParams) {\n                    await this.setState({trainingParams})\n                }\n            }\n        }    \n    }\n\n    async update() {\n        const trainingCurrent = this.state.trainingParams\n\n        if (trainingCurrent) {\n            // Ð¿Ð¾Ð»ÑÑÐ°ÐµÐ¼ ÑÐ¿Ð¸ÑÐ¾Ðº ÑÐ¾Ð·Ð´Ð°Ð½Ð½ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²Ð¾Ðº\n            const trainingListStr = localStorage.getItem('trainingList')\n\n            if (trainingListStr) {\n                const trainingList = JSON.parse(trainingListStr)\n\n                const trainingParams = trainingList.find(trainingParams => trainingParams.uuid === trainingCurrent.uuid)\n\n                if (trainingParams) {\n                    await this.setState({trainingParams})\n\n                    await this.setState({isTrainingOpen: false})\n                }\n            }\n        }\n    }\n\n    openTraining() {\n        // Ð´Ð¾Ð±Ð°Ð²Ð»ÑÐµÐ¼ Ð½Ð¾Ð²ÑÐ¹ Ð´ÐµÐ½Ñ\n        const trainingListStr = localStorage.getItem('trainingList')\n\n        if (trainingListStr) {\n            const trainingList = JSON.parse(trainingListStr)\n\n            const trainingParams = trainingList.find(trainingParams => trainingParams.uuid === this.state.trainingParams.uuid)\n\n            if (trainingParams) {\n                trainingParams.days.push(new TrainingDay())\n\n                localStorage.setItem('trainingList', JSON.stringify(trainingList))\n\n                this.setState({trainingParams})\n\n                this.setState({isTrainingOpen: true})\n            }\n        }\n    }\n\n    async closeTraining() {\n        await this.setState({isTrainingOpen: false})\n    }\n\n    render() {\n        return (\n            <main>\n                {!this.state.isTrainingOpen && <div className=\"container panel\">\n                    <a onClick={this.openTraining} className=\"btn\">ÐÐ°ÑÐ°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n                </div>}\n\n                {this.state.isTrainingOpen &&\n                    <CTrainingStartDayStat onUpdate={this.update}/>\n                }\n\n                {!this.state.isTrainingOpen && \n                    <CTrainingStartFullStat trainingParams={this.state.trainingParams}/>\n                }\n            </main>\n        )\n    }\n}","import BaseEntity from \"../BaseEntity\"\n\nexport class Weapon extends BaseEntity {\n    weaponType = null\n    label = \"\"\n    image = \"\"\n    icon = \"\"\n\n    constructor(obj) {\n        super(obj)\n\n        if (obj) {\n            this.weaponType = obj.weaponType ? obj.weaponType : null\n            this.label = obj.label ? obj.label : \"\"\n            this.image = obj.image ? obj.image : \"\"\n            this.icon = obj.icon ? obj.icon : \"\"\n        }\n    }\n}","import Enum from '../../core/Enum'\n\nexport const EWeaponBowsType = new Enum({\n    WEAPON_BOWS_TYPE_RECURVE: \"recurve\",\n    WEAPON_BOWS_TYPE_COMPOUND: \"compound\"\n})","import Enum from '../../core/Enum'\n\nexport const EWeaponCrossbowsType = new Enum({\n    WEAPON_CROSSBOWS_TYPE_RECURVE: \"recurve\",\n    WEAPON_CROSSBOWS_TYPE_COMPOUND: \"compound\"\n})","// Ð¼Ð¾ÐºÐ½ÑÑÑÐµ Ð´Ð°Ð½Ð½ÑÐµ, Ð²ÑÐµÐ¼ÐµÐ½Ð½Ð¾ Ð·Ð°Ð¼ÐµÐ½ÑÑÑÐ¸Ðµ ÑÑÑÑÐºÑÑÑÑ Ð±Ð°Ð·Ñ Ð´Ð°Ð½Ð½ÑÑ\nimport {TrainingParams} from './domain/entity/trainingParams/TrainingParams'\nimport {TrainingParamsBow} from './domain/entity/trainingParams/TrainingParamsBow'\nimport {TrainingParamsCrossbow} from './domain/entity/trainingParams/TrainingParamsCrossbow'\nimport {Training} from './domain/entity/training/Training'\nimport {Target} from './domain/entity/target/Target'\nimport {Weapon} from './domain/entity/weapon/Weapon'\nimport {EWeaponTypes} from './domain/entity/trainingParams/EWeaponTypes'\nimport {ETargetType} from './domain/entity/target/ETargetType'\nimport {EWeaponBowsType} from './domain/entity/weapon/EWeaponBowsType'\nimport {EWeaponCrossbowsType} from './domain/entity/weapon/EWeaponCrossbowsType'\n\nexport const Mock = {\n    // ÑÐ¿Ð¸ÑÐ¾Ðº Ð¿Ð°ÑÐ°Ð¼ÐµÑÑÐ¾Ð² ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÐ¸\n    trainingParamsList: [\n        // ÑÑÑÐµÐ»ÑÐ±Ð° Ð¸Ð· Ð»ÑÐºÐ°\n        new TrainingParams({\n            weaponType: EWeaponTypes.WEAPON_TYPE_BOW,\n            title: \"Ð¡ÑÐµÐ½Ð´Ð¾Ð²Ð°Ñ ÑÑÑÐµÐ»ÑÐ±Ð° Ð¸Ð· Ð»ÑÐºÐ°\",\n            image: \"service_1.png\",\n            trainingParamsBow: new TrainingParamsBow({\n\n            })\n        }),\n         // ÑÑÑÐµÐ»ÑÐ±Ð° Ð¸Ð· Ð°ÑÐ±Ð°Ð»ÐµÑÐ°\n         new TrainingParams({\n            weaponType: EWeaponTypes.WEAPON_TYPE_CROSSBOW,\n            title: \"Ð¡ÑÐµÐ½Ð´Ð¾Ð²Ð°Ñ ÑÑÑÐµÐ»ÑÐ±Ð° Ð¸Ð· Ð°ÑÐ±Ð°Ð»ÐµÑÐ°\",\n            image: \"service_2.png\",\n            trainingParamsCrossbow: new TrainingParamsCrossbow({\n\n            })\n        }),       \n    ],\n    // ÑÐ¿Ð¸ÑÐ¾Ðº Ð¼Ð¸ÑÐµÐ½ÐµÐ¹\n    trainingTargetList: [\n        // ÐºÐ»Ð°ÑÑÐ¸ÑÐµÑÐºÐ°Ñ Ð¼Ð¸ÑÐµÐ½Ñ\n        new Target({\n            targetType: ETargetType.TARGET_TYPE_CLASSIC_ARCHERY,\n            image: \"target_type_classic_archery.png\",\n            icon: \"target_type_classic_archery_icon.png\",\n            label: \"ÐÐ»Ð°ÑÑÐ¸ÑÐµÑÐºÐ°Ñ Ð¼Ð¸ÑÐµÐ½Ñ\"\n        }),\n        // ÑÐ¿Ð»Ð¾ÑÐ½Ð°Ñ ÐºÑÐ°ÑÐ½Ð°Ñ Ð¼Ð¸ÑÐµÐ½Ñ\n        new Target({\n            targetType: ETargetType.TARGET_TYPE_SOLID_RED,\n            image: \"target_type_classic_black.png\",\n            icon: \"target_type_classic_black_icon.png\",\n            label: \"ÐÐ»Ð°ÑÑÐ¸ÑÐµÑÐºÐ°Ñ ÑÑÑÐ½Ð°Ñ Ð¼Ð¸ÑÐµÐ½Ñ\"\n        }),\n    ],\n    // ÑÐ¿Ð¸ÑÐ¾Ðº ÑÐ¸Ð¿Ð¾Ð² Ð¾ÑÑÐ¶Ð¸Ñ\n    trainingWeaponBowsList: [\n        // ÑÐµÐºÑÑÑÐ¸Ð²Ð½ÑÐ¹ Ð»ÑÐº\n        new Weapon({\n            weaponType: EWeaponBowsType.WEAPON_BOWS_TYPE_RECURVE,\n            label: \"Ð ÐµÐºÑÑÑÐ¸Ð²Ð½ÑÐ¹ Ð»ÑÐº\",\n            image: \"bow_type_recurve.png\",\n            icon: \"bow_type_recurve.png\"\n        }),\n        // Ð±Ð»Ð¾ÑÐ½ÑÐ¹ Ð»ÑÐº\n        new Weapon({\n            weaponType: EWeaponBowsType.WEAPON_BOWS_TYPE_COMPOUND,\n            label: \"ÐÐ»Ð¾ÑÐ½ÑÐ¹ Ð»ÑÐº\",\n            image: \"bow_type_compound.png\",\n            icon: \"bow_type_compound.png\"\n        }),        \n    ],\n    trainingWeaponCrossbowsList: [\n        // ÑÐµÐºÑÑÑÐ¸Ð²Ð½ÑÐ¹ Ð°ÑÐ±Ð°Ð»ÐµÑ\n        new Weapon({\n            weaponType: EWeaponCrossbowsType.WEAPON_CROSSBOWS_TYPE_RECURVE,\n            label: \"Ð ÐµÐºÑÑÑÐ¸Ð²Ð½ÑÐ¹ Ð°ÑÐ±Ð°Ð»ÐµÑ\",\n            image: \"crossbow_type_recurve.png\",\n            icon: \"crossbow_type_recurve.png\"\n        }),\n        // Ð±Ð»Ð¾ÑÐ½ÑÐ¹ Ð°ÑÐ±Ð°Ð»ÐµÑ\n        new Weapon({\n            weaponType: EWeaponCrossbowsType.WEAPON_CROSSBOWS_TYPE_COMPOUND,\n            label: \"ÐÐ»Ð¾ÑÐ½ÑÐ¹ Ð°ÑÐ±Ð°Ð»ÐµÑ\",\n            image: \"crossbow_type_compound.png\",\n            icon: \"crossbow_type_compound.png\"\n        }),        \n    ]\n}","import React, {useState} from 'react'\nimport {config} from '../../../../config'\nimport { Button, Grommet} from 'grommet'\nimport { Notification } from 'grommet-icons'\n// Ð¸Ð¼Ð¿Ð¾ÑÑÐ¸ÑÑÐµÐ¼ Ð¼Ð¾ÐºÐ½ÑÑÑÐµ Ð´Ð°Ð½Ð½ÑÐµ\nimport {Mock} from '../../../../mock'\n\nexport class CTrainingCreateWeapon extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    onChoose(trainingParams) {\n        const handleChoose = this.props.handleChoose;\n        handleChoose(trainingParams)\n    }\n\n    render() {   \n        return (\n            <div className=\"container panel\">\n                <h3 className=\"caption\">ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐµÐ¶Ð¸Ð¼ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÐ¸:</h3>\n                <div>\n                </div>\n                <div className=\"service\">\n                    {Mock.trainingParamsList.map(trainingParams => {\n                        return (\n                            <div key={trainingParams.uuid} className={this.props.selectTrainingParams.weaponType === trainingParams.weaponType ? \"service-box selected\" : \"service-box\"} style={{background: \"url(\" + trainingParams.image + \")\"}}>\n                                <div className=\"service-box-header\">\n                                    {/*<div className=\"service-box-header-hit\">Ð¥Ð¸Ñ!</div>*/}\n                                </div>\n                                <div className=\"service-box-footer\">\n                                    <div className=\"service-box-footer-title\">\n                                        {trainingParams.title}\n                                    </div>\n                                    <div className=\"service-box-footer-caption\">\n                                        <a className=\"btn\" onClick={(e) => {\n                                            e.preventDefault()\n                                            this.onChoose(trainingParams)\n                                        }}>ÐÑÐ±ÑÐ°ÑÑ</a>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                     })}\n                </div>\n            </div>            \n        )\n    }\n}\n","import React, {useState} from 'react'\nimport { RangeInput, Box, Heading, Grommet} from 'grommet'\n\nexport const CRanger = (props) => {\n    const [value, setValue] = React.useState(0)\n    const title = props.title ? props.title : \"ÐÐ½Ð°ÑÐµÐ½Ð¸Ðµ\"\n    const unit = props.unit ? props.unit : \"Ð¼ÐµÑÑÐ¾Ð²\"\n\n    return (\n      <Box gridArea=\"title\" pad=\"medium\">\n        <Heading margin=\"none\" textAlign=\"start\" color=\"light-1\" level=\"6\">{title.concat(' ').concat(value.toString()).concat(' ').concat(unit)}</Heading>\n        <RangeInput\n          className=\"ranger\"\n          value={value}\n          min={props.min}\n          max={props.max}\n          name={props.name}\n          step={1}\n          onChange={event => {setValue(event.target.value); props.onChange(event.target.value)}}\n        />\n      </Box>\n    );\n  }","import React, {useState} from 'react'\nimport { TextInput, Grommet} from 'grommet'\n\nexport const CInput = (props) => {\n    let [value, setValue] = React.useState('');\n    return (\n      <TextInput\n        className=\"inp\"\n        placeholder={props.placeholder}\n        value={value}\n        onChange={event => { setValue(event.target.value); props.onChange(event.target.value)}}\n      />\n    );\n  }","import React, {useEffect} from 'react'\nimport {Image, Box, Text, TextInput, Grommet} from 'grommet'\nimport _ from 'lodash'\n\nexport const CImageSelect = (props) => {\n    const [value, setValue] = React.useState(props.data && props.data.length ? _.first(props.data) : null);\n\n    useEffect(() => {\n        props.onChoose(value)\n    }, []);\n\n    return (\n        <Box className=\"image-select\">\n            <Box className=\"image-select-container\">\n                {props.data.map(item => {\n                    return (\n                        <Box className=\"image-select-item\">\n                            <Image\n                                onClick={event => { setValue(item); props.onChoose(item)}}\n                                className={value && item.uuid === value.uuid ? \"image-select-item-image selected\" : \"image-select-item-image\"}\n                                src={item.icon}\n                            />\n                            <Text className=\"image-select-item-text\">{item.label}</Text>\n                        </Box>\n                    )\n                })}\n            </Box>\n\n        </Box>\n    );\n}","import React from 'react'\nimport { Grid, Box, Heading, Grommet} from 'grommet'\nimport { CRanger } from '../../../interface/CRanger'\nimport { CInput } from '../../../interface/CInput'\nimport { CSelectBox } from '../../../interface/CSelectBox'\nimport { CImageSelect } from '../../../interface/CImageSelect'\nimport { TrainingParams } from '../../../../domain/entity/trainingParams/TrainingParams'\nimport { EBowTypes } from \"../../../../domain/entity/trainingParams/EBowTypes\"\nimport {Mock} from '../../../../mock'\n\n/*function ShowToolButtons(props) {\n    if (props.currentTraining) {\n        return <a onClick={props.onClick} className=\"btn\">Ð¡Ð¾Ð·Ð´Ð°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n    }\n    if (!props.currentTraining) {\n        return <a href={'training/'.concat(props.currentTraining.uuid)} className=\"btn\">ÐÐ°ÑÐ°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n    }\n\n    return <a onClick={props.onClick} className=\"btn\">Ð¡Ð¾Ð·Ð´Ð°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n}*/\n\nexport class CTrainingCreateParamsBow extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = new TrainingParams(props.trainingParams)\n\n        this.saveTraining = this.saveTraining.bind(this)\n        this.changeName = this.changeName.bind(this)\n        this.chooseTarget = this.chooseTarget.bind(this)\n        this.chooseWeapon = this.chooseWeapon.bind(this)\n        this.changeRange = this.changeRange.bind(this)\n    }\n\n    saveTraining() {\n        this.props.saveTraining(this.state)\n    }\n\n    async changeName(name) {\n        await this.setState({name})\n    }\n\n    async chooseTarget(targetType) {\n        const trainingParamsBow = await Object.assign(this.state.trainingParamsBow)\n        trainingParamsBow.targetType = await Object.assign(targetType)\n\n        await this.setState({trainingParamsBow: Object.assign(trainingParamsBow)})\n    }\n\n    async chooseWeapon(weaponType) {\n        const trainingParamsBow = await Object.assign(this.state.trainingParamsBow)\n        trainingParamsBow.weaponType = await Object.assign(weaponType)\n\n        await this.setState({trainingParamsBow: Object.assign(trainingParamsBow)})\n    }\n\n    async changeRange(range) {\n        const trainingParamsBow = await Object.assign(this.state.trainingParamsBow)\n        trainingParamsBow.range = range\n\n        await this.setState({trainingParamsBow: Object.assign(trainingParamsBow)})\n    }\n\n    render() {\n        return (\n            <div className=\"container panel\">\n                <Grid\n                    columns={['auto', 'auto']}\n                    rows={['auto', 'auto', 'auto', 'auto', 'auto']}\n                    gap=\"small\"\n                    areas={[\n                        { name: 'title', start: [0, 0], end: [1, 0] },\n                        { name: 'target', start: [0, 1], end: [1, 1] },\n                        { name: 'type', start: [0, 2], end: [1, 2] },\n                        { name: 'ranger', start: [0, 3], end: [1, 3] },\n                        { name: 'tool', start: [0, 4], end: [1, 4] },\n                    ]}\n                >\n                    <Box gridArea=\"title\" pad=\"medium\">\n                        <Heading margin=\"none\" textAlign=\"start\" color=\"light-1\" level=\"3\">ÐÐ°Ð·Ð¾Ð²Ð¸ÑÐµ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ:</Heading>\n                        <CInput onChange={(value) => {this.changeName(value)}}/>\n                    </Box>\n                    <Box gridArea=\"target\" pad=\"medium\">\n                        <Heading margin=\"none\" textAlign=\"start\" color=\"light-1\" level=\"3\">ÐÑÐ±Ð¾Ñ Ð¼Ð¸ÑÐµÐ½Ð¸:</Heading>\n                        <CImageSelect onChoose={this.chooseTarget} data={Mock.trainingTargetList}/>\n                        {/*<CSelectImage values={EBowTypes.entries().map(item => item.value)} onChange={(value) => {this.setState({trainingParamsBow: {targetType: value}})}}/>*/}\n                    </Box>\n                    <Box gridArea=\"type\" pad=\"medium\">\n                        <Heading margin=\"none\" textAlign=\"start\" color=\"light-1\" level=\"3\">Ð¢Ð¸Ð¿ Ð»ÑÐºÐ°:</Heading>\n                        <CImageSelect onChoose={this.chooseWeapon} data={Mock.trainingWeaponBowsList}/>\n                        {/*<CSelectBox onChange={(value) => {this.setState({trainingParamsBow: {weaponType: value}})}} values={Mock.trainingWeaponBowsList.map(item => item.uu)}/>*/}\n                    </Box>\n                    <Box gridArea=\"ranger\" pad=\"medium\">\n                        <Heading margin=\"none\" textAlign=\"start\" color=\"light-1\" level=\"3\">Ð Ð°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ Ð´Ð¾ Ð¼Ð¸ÑÐµÐ½Ð¸:</Heading>\n                        <CRanger onChange={(value) => {this.changeRange(value)}} min=\"0\" max=\"100\" name=\"Ð Ð°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ Ð´Ð¾ Ð¼Ð¸ÑÐµÐ½Ð¸\"/>\n                    </Box>\n                    <Box gridArea=\"tool\" pad=\"medium\">\n                        <a onClick={this.saveTraining} className=\"btn\">Ð¡Ð¾Ð·Ð´Ð°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n                    </Box>\n                </Grid>\n            </div>\n        )\n    }\n}","import Enum from '../../core/Enum'\n\nexport const EBowTypes = new Enum({\n    BOW_TYPE_RECURVE: \"recurve\",\n    BOW_TYPE_COMPOUND: \"compound\"\n})","import React from 'react'\nimport { Grid, Box, Heading, Grommet} from 'grommet'\nimport { CRanger } from '../../../interface/CRanger'\nimport { CInput } from '../../../interface/CInput'\nimport { CSelectBox } from '../../../interface/CSelectBox'\nimport { CImageSelect } from '../../../interface/CImageSelect'\nimport { TrainingParams } from '../../../../domain/entity/trainingParams/TrainingParams'\nimport { ECrossbowTypes } from \"../../../../domain/entity/trainingParams/ECrossbowTypes\"\nimport {Mock} from '../../../../mock'\n\n/*function ShowToolButtons(props) {\n    if (props.currentTraining) {\n        return <a onClick={props.onClick} className=\"btn\">Ð¡Ð¾Ð·Ð´Ð°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n    }\n    if (!props.currentTraining) {\n        return <a href={'training/'.concat(props.currentTraining.uuid)} className=\"btn\">ÐÐ°ÑÐ°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n    }\n\n    return <a onClick={props.onClick} className=\"btn\">Ð¡Ð¾Ð·Ð´Ð°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n}*/\n\nexport class CTrainingCreateParamsCrossbow extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = new TrainingParams(props.trainingParams)\n\n        this.saveTraining = this.saveTraining.bind(this)\n        this.changeName = this.changeName.bind(this)\n        this.chooseTarget = this.chooseTarget.bind(this)\n        this.chooseWeapon = this.chooseWeapon.bind(this)\n        this.changeRange = this.changeRange.bind(this)\n    }\n\n    saveTraining() {\n        this.props.saveTraining(this.state)\n    }\n\n    async changeName(name) {\n        await this.setState({name})\n    }\n\n    async chooseTarget(targetType) {\n        const trainingParamsCrossbow = await Object.assign(this.state.trainingParamsCrossbow)\n        trainingParamsCrossbow.targetType = await Object.assign(targetType)\n\n        await this.setState({trainingParamsCrossbow: Object.assign(trainingParamsCrossbow)})\n    }\n\n    async chooseWeapon(weaponType) {\n        const trainingParamsCrossbow = await Object.assign(this.state.trainingParamsCrossbow)\n        trainingParamsCrossbow.weaponType = await Object.assign(weaponType)\n\n        await this.setState({trainingParamsCrossbow: Object.assign(trainingParamsCrossbow)})\n    }\n\n    async changeRange(range) {\n        const trainingParamsCrossbow = await Object.assign(this.state.trainingParamsCrossbow)\n        trainingParamsCrossbow.range = range\n\n        await this.setState({trainingParamsCrossbow: Object.assign(trainingParamsCrossbow)})\n    }\n\n    render() {\n        return (\n            <div className=\"container panel\">\n                <Grid\n                    columns={['auto', 'auto']}\n                    rows={['auto', 'auto', 'auto', 'auto', 'auto']}\n                    gap=\"small\"\n                    areas={[\n                        { name: 'title', start: [0, 0], end: [1, 0] },\n                        { name: 'target', start: [0, 1], end: [1, 1] },\n                        { name: 'type', start: [0, 2], end: [1, 2] },\n                        { name: 'ranger', start: [0, 3], end: [1, 3] },\n                        { name: 'tool', start: [0, 4], end: [1, 4] },\n                    ]}\n                >\n                    <Box gridArea=\"title\" pad=\"medium\">\n                        <Heading margin=\"none\" textAlign=\"start\" color=\"light-1\" level=\"3\">ÐÐ°Ð·Ð¾Ð²Ð¸ÑÐµ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ:</Heading>\n                        <CInput onChange={(value) => {this.changeName(value)}}/>\n                    </Box>\n                    <Box gridArea=\"target\" pad=\"medium\">\n                        <Heading margin=\"none\" textAlign=\"start\" color=\"light-1\" level=\"3\">ÐÑÐ±Ð¾Ñ Ð¼Ð¸ÑÐµÐ½Ð¸:</Heading>\n                        <CImageSelect onChoose={this.chooseTarget} data={Mock.trainingTargetList}/>\n                        {/*<CSelectImage values={ECrossbowTypes.entries().map(item => item.value)} onChange={(value) => {this.setState({trainingParamsBow: {targetType: value}})}}/>*/}\n                    </Box>\n                    <Box gridArea=\"type\" pad=\"medium\">\n                        <Heading margin=\"none\" textAlign=\"start\" color=\"light-1\" level=\"3\">Ð¢Ð¸Ð¿ Ð°ÑÐ±Ð°Ð»ÐµÑÐ°:</Heading>\n                        <CImageSelect onChoose={this.chooseWeapon} data={Mock.trainingWeaponCrossbowsList}/>\n                    </Box>\n                    <Box gridArea=\"ranger\" pad=\"medium\">\n                        <Heading margin=\"none\" textAlign=\"start\" color=\"light-1\" level=\"3\">Ð Ð°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ Ð´Ð¾ Ð¼Ð¸ÑÐµÐ½Ð¸:</Heading>\n                        <CRanger onChange={(value) => {this.changeRange(value)}} min=\"0\" max=\"100\" name=\"Ð Ð°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ Ð´Ð¾ Ð¼Ð¸ÑÐµÐ½Ð¸\"/>\n                    </Box>\n                    <Box gridArea=\"tool\" pad=\"medium\">\n                        <a onClick={this.saveTraining} className=\"btn\">Ð¡Ð¾Ð·Ð´Ð°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n                    </Box>\n                </Grid>\n            </div>\n        )\n    }\n}","import Enum from '../../core/Enum'\n\nexport const ECrossbowTypes = new Enum({\n    CROSSBOW_TYPE_RECURVE: \"recurve\",\n    CROSSBOW_TYPE_COMPOUND: \"compound\"\n})","import React from 'react'\nimport {config} from '../../../../config'\nimport {CTrainingCreateWeapon} from './CTrainingCreateWeapon'\nimport {CTrainingCreateParamsBow} from \"./CTrainingCreateParamsBow\"\nimport {CTrainingCreateParamsCrossbow} from \"./CTrainingCreateParamsCrossbow\"\nimport {TrainingParams} from '../../../../domain/entity/trainingParams/TrainingParams'\nimport {Training} from '../../../../domain/entity/training/Training'\nimport {TrainingCurrent} from '../../../../domain/entity/training/TrainingCurrent'\nimport {EWeaponTypes} from '../../../../domain/entity/trainingParams/EWeaponTypes'\nimport System from '../../../../domain/core/System'\n// Ð¸Ð¼Ð¿Ð¾ÑÑÐ¸ÑÑÐµÐ¼ Ð¼Ð¾ÐºÐ½ÑÑÑÐµ Ð´Ð°Ð½Ð½ÑÐµ\nimport {Mock} from '../../../../mock'\n\nconst ShowTrainingParams = (props) => {\n    if (props.trainingParams) {\n        switch (props.trainingParams.weaponType) {\n            case EWeaponTypes.WEAPON_TYPE_BOW:\n                return <CTrainingCreateParamsBow saveTraining={props.saveTraining} trainingParams={props.trainingParams}/>\n            case EWeaponTypes.WEAPON_TYPE_CROSSBOW:\n                return <CTrainingCreateParamsCrossbow saveTraining={props.saveTraining} trainingParams={props.trainingParams}/>\n        }\n    }\n\n    return <CTrainingCreateParamsBow saveTraining={props.saveTraining} trainingParams={props.trainingParams}/>\n}\n\nexport class CTrainingCreate extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            trainingParams: Mock.trainingParamsList[0],\n            trainingList: null\n        }\n\n        this.onChoose = this.onChoose.bind(this)\n        this.createTraining = this.createTraining.bind(this)\n    }\n\n    // Ð²ÑÐ±Ð¾Ñ ÑÐµÐ¶Ð¸Ð¼Ð° ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÐ° (Ð»ÑÐº, Ð°ÑÐ±Ð°Ð»ÐµÑ Ð¸ÑÐ´)\n    async onChoose(trainingParams) {\n        await this.setState({trainingParams: new TrainingParams(trainingParams)})\n    }\n\n    // ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ðµ Ð½Ð¾Ð²Ð¾Ð¹ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÐ¸\n    async createTraining(params) {\n        params = new Training(params)\n\n        // Ð²ÑÐµÐ¼ÐµÐ½Ð½Ð¾ Ð³ÐµÐ½ÐµÑÐ¸Ð¼ ÑÐ½Ð¸ÐºÐ°Ð»ÑÐ½ÑÐ¹ id (Ð² Ð¿Ð¾ÑÐ»ÐµÐ´ÑÑÐ²Ð¸Ð¸ Ð¾Ð½ Ð±ÑÐ´ÐµÑ Ð³ÐµÐ½ÐµÑÐ¸ÑÑÑÑ Ð½Ð° ÑÑÐ¾ÑÐ¾Ð½Ðµ ÑÐµÑÐ²ÐµÑÐ° Ð¿Ð¾ Ð·Ð°Ð¿ÑÐ¾ÑÑ)\n        params.uuid = System.uuid()\n\n        // ÑÐ¾ÑÑÐ°Ð½ÑÐµÐ¼ Ð² localstorage ÑÐµÐºÑÑÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ\n        //await localStorage.setItem('currentTraining', JSON.stringify(params));\n\n        //const currentTraining = new Training({trainingParamsUuid: params.uuid})\n\n        //await localStorage.setItem('currentTraining2', JSON.stringify(currentTraining))\n\n        // Ð¿Ð¾Ð»ÑÑÐ°ÐµÐ¼ Ð¼Ð°ÑÑÐ¸Ð² ÑÑÐµÐ½Ð¸ÑÐ¾Ð²Ð¾Ðº Ð¸Ð· localStorage\n        const trainingList = await JSON.parse(localStorage.getItem('trainingList'))\n\n        if (trainingList) {\n            await this.setState({trainingList})\n        }\n\n        if (this.state.trainingList) {\n            await this.setState({trainingList: this.state.trainingList.concat([params])})\n        }\n\n        if (!this.state.trainingList) {\n            await this.setState({trainingList: [params]})\n        }\n\n        // ÑÐ¾ÑÑÐ°Ð½ÑÐµÐ¼ Ð² localstorage ÑÐ¿Ð¸ÑÐ¾Ðº ÑÑÐµÐ½Ð¸ÑÐ¾Ð²Ð¾Ðº\n        await localStorage.setItem('trainingList', JSON.stringify(this.state.trainingList));\n\n        const trainingCurrent = new TrainingCurrent({\n            trainingParamsUuid: params.uuid,   \n        })\n\n        await localStorage.setItem('trainingCurrent', JSON.stringify(trainingCurrent))\n        \n        document.location = '/training_start'\n\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <CTrainingCreateWeapon selectTrainingParams={this.state.trainingParams} handleChoose={this.onChoose}/>\n                <ShowTrainingParams saveTraining={this.createTraining} trainingParams={this.state.trainingParams}/>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport {TrainingCurrent} from '../../../../domain/entity/training/TrainingCurrent'\nimport {TrainingService} from \"../../../../domain/entity/training/TrainingService\";\n\nexport class CTrainingListItemBow extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.deleteTrainingParams = this.deleteTrainingParams.bind(this)\n        this.openTraining = this.openTraining.bind(this)\n        this.displayTotalDays = this.displayTotalDays.bind(this)\n        this.displayTotalShots = this.displayTotalShots.bind(this)\n        this.displayTotalAccuracy = this.displayTotalAccuracy.bind(this)\n    }\n\n    async openTraining() {\n        const trainingCurrent = new TrainingCurrent({\n            trainingParamsUuid: this.props.trainingParams.uuid,   \n        })\n\n        await localStorage.setItem('trainingCurrent', JSON.stringify(trainingCurrent))\n        \n        document.location = '/training_start'\n    }\n\n    deleteTrainingParams(e) {\n        e.preventDefault()\n\n        this.props.onDelete(this.props.trainingParams)\n    }\n\n    displayTotalDays() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            return trainingService.countDays()\n        }\n\n        return 0\n    }\n\n    displayTotalShots() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            return trainingService.countTotalShots()\n        }\n\n        return \"-\"\n    }\n\n    displayTotalAccuracy() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            if (trainingService.countAverageAccuracy() !== null) {\n                return trainingService.countAverageAccuracy().toString().concat(\"%\")\n            }\n        }\n\n        return \"-\"\n    }\n\n    render() {\n        return (\n            <div className=\"training-box-container\">\n                <div className=\"training-box\">\n                    <div className=\"training-box-avatar\">\n                        <div className=\"training-box-avatar-img\" style={{backgroundImage: 'url(' + this.props.trainingParams.image + ')'}}></div>\n                    </div>\n                    <div className=\"training-box-info\">\n                        <div className=\"training-box-info-title\">\n                            {this.props.trainingParams.name}\n                        </div>\n                        <div className=\"training-box-info-type\">\n                            Ð¢ÑÐ°Ð´Ð¸ÑÐ¸Ð¾Ð½Ð½Ð°Ñ ÑÑÑÐµÐ»ÑÐ±Ð° Ð¸Ð· Ð»ÑÐºÐ°\n                        </div>\n                        <div className=\"training-box-info-params\">\n                            <p>\n                                Ð¢Ð¸Ð¿ Ð»ÑÐºÐ°: {this.props.trainingParams.trainingParamsBow.weaponType.label}\n                            </p>\n                            <p>\n                                Ð¢Ð¸Ð¿ Ð¼Ð¸ÑÐµÐ½Ð¸: {this.props.trainingParams.trainingParamsBow.targetType.label}\n                            </p>\n                            <p>\n                                ÐÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð²ÑÑÑÑÐµÐ»Ð¾Ð²: {this.displayTotalShots()}\n                            </p>\n                            <p>\n                                Ð¡ÑÐµÐ´Ð½ÑÑ ÑÐ¾ÑÐ½Ð¾ÑÑÑ: {this.displayTotalAccuracy()}\n                            </p>\n                        </div>\n                        <div className=\"training-box-info-params\">\n                            Ð Ð°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ Ð´Ð¾ Ð¼Ð¸ÑÐµÐ½Ð¸: {this.props.trainingParams.trainingParamsBow.range} Ð¼.\n                        </div>\n                        <div className=\"training-box-info-tools\">\n                            <a onClick={this.openTraining} className=\"btn\">ÐÐ°ÑÐ°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n                        </div>\n                    </div>\n                </div>\n                <a onClick={this.deleteTrainingParams} className=\"training-box-close\">&#215;</a>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport {TrainingCurrent} from \"../../../../domain/entity/training/TrainingCurrent\";\nimport {TrainingService} from \"../../../../domain/entity/training/TrainingService\";\n\nexport class CTrainingListItemCrossbow extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.deleteTrainingParams = this.deleteTrainingParams.bind(this)\n        this.openTraining = this.openTraining.bind(this)\n        this.displayTotalDays = this.displayTotalDays.bind(this)\n        this.displayTotalShots = this.displayTotalShots.bind(this)\n        this.displayTotalAccuracy = this.displayTotalAccuracy.bind(this)\n    }\n\n    async openTraining() {\n        const trainingCurrent = new TrainingCurrent({\n            trainingParamsUuid: this.props.trainingParams.uuid,\n        })\n\n        await localStorage.setItem('trainingCurrent', JSON.stringify(trainingCurrent))\n\n        document.location = '/training_start'\n    }\n\n    deleteTrainingParams(e) {\n        e.preventDefault()\n\n        this.props.onDelete(this.props.trainingParams)\n    }\n\n    displayTotalDays() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            return trainingService.countDays()\n        }\n\n        return 0\n    }\n\n    displayTotalShots() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            return trainingService.countTotalShots()\n        }\n\n        return \"-\"\n    }\n\n    displayTotalAccuracy() {\n        if (this.props.trainingParams) {\n            const trainingService = new TrainingService(this.props.trainingParams)\n\n            if (trainingService.countAverageAccuracy() !== null) {\n                return trainingService.countAverageAccuracy().toString().concat(\"%\")\n            }\n        }\n\n        return \"-\"\n    }\n\n    render() {\n        return (\n            <div className=\"training-box-container\">\n                <div className=\"training-box\">\n                    <div className=\"training-box-avatar\">\n                        <div className=\"training-box-avatar-img\" style={{backgroundImage: 'url(' + this.props.trainingParams.image + ')'}}></div>\n                    </div>\n                    <div className=\"training-box-info\">\n                        <div className=\"training-box-info-title\">\n                            {this.props.trainingParams.name}\n                        </div>\n                        <div className=\"training-box-info-type\">\n                            Ð¡ÑÐµÐ½Ð´Ð¾Ð²Ð°Ñ ÑÑÑÐµÐ»ÑÐ±Ð° Ð¸Ð· Ð°ÑÐ±Ð°Ð»ÐµÑÐ°\n                        </div>\n                        <div className=\"training-box-info-params\">\n                            <p>\n                                Ð¢Ð¸Ð¿ Ð°ÑÐ±Ð°Ð»ÐµÑÐ°: {this.props.trainingParams.trainingParamsCrossbow.weaponType.label}\n                            </p>\n                            <p>\n                                Ð¢Ð¸Ð¿ Ð¼Ð¸ÑÐµÐ½Ð¸: {this.props.trainingParams.trainingParamsCrossbow.targetType.label}\n                            </p>\n                            <p>\n                                ÐÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð²ÑÑÑÑÐµÐ»Ð¾Ð²: {this.displayTotalShots()}\n                            </p>\n                            <p>\n                                Ð¡ÑÐµÐ´Ð½ÑÑ ÑÐ¾ÑÐ½Ð¾ÑÑÑ: {this.displayTotalAccuracy()}\n                            </p>\n                        </div>\n                        <div className=\"training-box-info-params\">\n                            Ð Ð°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ Ð´Ð¾ Ð¼Ð¸ÑÐµÐ½Ð¸: {this.props.trainingParams.trainingParamsCrossbow.range} Ð¼.\n                        </div>\n                        <div className=\"training-box-info-tools\">\n                            <a onClick={this.openTraining} className=\"btn\">ÐÐ°ÑÐ°ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ</a>\n                        </div>\n                    </div>\n                    <a onClick={this.deleteTrainingParams} className=\"training-box-close\">&#215;</a>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport {Box, Image, Text, Grommet} from 'grommet'\n\nexport class CTrainingListEmpty extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <Box className=\"training-list-empty-box\">\n                <Image fit=\"contain\" src=\"sad.png\"/>\n                <Text color=\"white\" size=\"large\">{this.props.text}</Text>\n            </Box>\n        )\n    }\n}","import React from 'react'\nimport {Button, Card, CardBody, CardHeader, Form, Text, Box} from 'grommet'\n\nexport class CDialog extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.onConfirm = this.onConfirm.bind(this)\n        this.onClose = this.onClose.bind(this)\n    }\n\n    onConfirm(e) {\n        e.preventDefault()\n\n        this.props.onConfirm()\n    }\n\n    onClose(e) {\n        e.preventDefault()\n\n        this.props.onClose()\n    }\n\n    render() {\n        return (\n            <div className={this.props.show ? \"message-nightbox\" : \"message-nightbox hidden\"}>\n                <Card className=\"message-box\" width=\"medium\" background=\"light-1\">\n                    {/*<CardHeader className=\"pa-5 mb-15 text-medium center text-white\"\n                                pad=\"medium\">{this.props.title ? this.props.title : \"ÐÑÐ¸Ð±ÐºÐ°\"}</CardHeader>*/}\n                    <CardBody className=\"message-box-body\" style={{paddingBottom: \"10px\"}}>\n                        <Form>\n                            <Box pad=\"small\">\n                                <Text className=\"message-box-text\">{this.props.message ? this.props.message : \"\"}</Text>\n                            </Box>\n                            <Box className=\"message-box-tools\" pad=\"small\">\n                                <Button className=\"message-box-btn\" onClick={this.onConfirm} type=\"button\" label=\"ÐÐ°\"/>\n                                <Button className=\"message-box-btn\" onClick={this.onClose} type=\"button\" label=\"ÐÐµÑ\"/>\n                            </Box>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport {CTrainingListItemBow} from './CTrainingListItemBow'\nimport {CTrainingListItemCrossbow} from './CTrainingListItemCrossbow'\nimport {CTrainingListEmpty} from './CTrainingListEmpty'\nimport {EWeaponTypes} from '../../../../domain/entity/trainingParams/EWeaponTypes'\nimport {CDialog} from \"../../../interface/CDialog\"\n\nexport class CTrainingList extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            trainingList: [],\n            showDeleteDialog: false,\n            trainingParams: null\n        }\n\n        this.deleteTrainingParams = this.deleteTrainingParams.bind(this)\n        this.showDeleteDialog = this.showDeleteDialog.bind(this)\n        this.closeDeleteDialog = this.closeDeleteDialog.bind(this)\n    }\n\n    /* ÑÑÐºÐ¸ */\n\n    componentWillMount() { \n        // Ð¿Ð¾Ð»ÑÑÐ°ÐµÐ¼ ÑÐ¿Ð¸ÑÐ¾Ðº ÑÑÐµÐ½Ð¸ÑÐ¾Ð²Ð¾Ðº\n        const trainingList = JSON.parse(localStorage.getItem('trainingList'))\n\n        if (trainingList) {\n            this.setState({trainingList})\n        }\n    }\n\n    /* Ð¼ÐµÑÐ¾Ð´Ñ */\n\n    async deleteTrainingParams() {\n        if (this.state.trainingParams && this.state.trainingParams.uuid) {\n            const trainingList = await JSON.parse(localStorage.getItem('trainingList'))\n\n            if (trainingList) {\n                const trainingParamsIndex = trainingList.findIndex(item => item.uuid === this.state.trainingParams.uuid)\n\n                if (trainingParamsIndex >= 0) {\n                    trainingList.splice(trainingParamsIndex, 1)\n\n                    await localStorage.setItem('trainingList', JSON.stringify(trainingList))\n\n                    await this.setState({trainingList})\n\n                    this.closeDeleteDialog()\n                }\n            }\n        }\n    }\n\n    showDeleteDialog(trainingParams) {\n        this.setState({trainingParams})\n        this.setState({showDeleteDialog: true})\n    }\n\n    closeDeleteDialog() {\n        this.setState({showDeleteDialog: false})\n    }\n\n    render() {\n        return (\n            <div className=\"container panel\">\n                <div className=\"training-list\">\n                    {this.state.trainingList.length > 0 && this.state.trainingList.map(item => {\n                        if (item.weaponType == EWeaponTypes.WEAPON_TYPE_BOW) {\n                            return <CTrainingListItemBow onDelete={this.showDeleteDialog} trainingParams={item}/>\n                        } \n\n                        if (item.weaponType == EWeaponTypes.WEAPON_TYPE_CROSSBOW) {\n                            return <CTrainingListItemCrossbow onDelete={this.showDeleteDialog} trainingParams={item}/>\n                        } \n\n                        return <CTrainingListItemBow onDelete={this.showDeleteDialog} trainingParams={item}/>\n                    })}\n\n                    {this.state.trainingList.length == 0 && <CTrainingListEmpty text=\"Ð¡Ð¿Ð¸ÑÐ¾Ðº ÑÑÐµÐ½Ð¸ÑÐ¾Ð²Ð¾Ðº Ð¿ÑÑÑ\"/>}\n                </div>\n                <CDialog onConfirm={this.deleteTrainingParams} onClose={this.closeDeleteDialog} show={this.state.showDeleteDialog} message=\"ÐÑ ÑÐ²ÐµÑÐµÐ½Ñ,ÑÑÐ¾ ÑÐ¾ÑÐ¸ÑÐµ ÑÐ´Ð°Ð»Ð¸ÑÑ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÑ?\"/>\n            </div>\n        )\n    }\n} ","import React from 'react'\nimport { CTrainingCreate } from '../components/main/training/trainingCreate/CTrainingCreate'\n// Ð²ÑÐµÐ¼ÐµÐ½Ð½Ð¾\nimport { CTrainingList } from '../components/main/training/trainingList/CTrainingList'\n\nfunction ShowTab(props) {\n    if (props.mode === \"new\") {\n        return <CTrainingCreate/>\n    }\n\n    if (props.mode === \"list\") {\n        return <CTrainingList/>\n    }\n\n    return <CTrainingCreate/>\n}\n\nexport class Training extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            mode: \"new\"\n        }\n\n        this.switchMode = this.switchMode.bind(this)\n    }\n\n    switchMode(mode) {\n        this.setState({mode});\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"tab-panel\">\n                    <div className=\"tab-panel-switch\">\n                        <div className=\"container panel\">\n                            <a onClick={this.switchMode.bind(this, \"new\")} className={this.state.mode === \"new\" ? \"btn\": \"btn btn-secondary\"}>ÐÐ¾Ð²Ð°Ñ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÐ°</a>\n                            <a onClick={this.switchMode.bind(this, \"list\")} className={this.state.mode === \"list\" ? \"btn\": \"btn btn-secondary\"}>Ð¡Ð¾ÑÑÐ°Ð½ÑÐ½Ð½ÑÐµ ÑÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÐ¸</a>\n                        </div>\n                    </div>\n                    <div className=\"tab-panel-body\">\n                        <ShowTab mode={this.state.mode}/>\n                    </div>\n                </div>\n\n                \n                \n                {/*<WeaponMenu/>\n                <TrainingParams/>\n                <Target/>*/}\n            </main>\n        )\n    }\n} ","import { Header } from './components/header/CHeader'\nimport { MainPage } from './pages/MainPage'\nimport { InTrain } from './pages/InTrain'\nimport { Training } from './pages/Training'\nimport { Auth } from './pages/Auth'\n\nexport const config = {\n    pages: [\n        {\n            menu: \"ÐÐ»Ð°Ð²Ð½Ð°Ñ\",\n            route: \"/main\",\n            component: MainPage,\n            selected: true\n        },\n        {\n            menu: \"Ð¢ÑÐµÐ½Ð¸ÑÐ¾Ð²ÐºÐ°\",\n            route: \"/training\",\n            component: Training,\n            selected: false\n        },\n        {\n            menu: null,\n            route: \"/training_start\",\n            component: InTrain,\n            selected: false\n        }\n    ],\n    training: [\n        {\n            mode: {\n                id: 0,\n                title: \"Ð¡ÑÐµÐ½Ð´Ð¾Ð²Ð°Ñ ÑÑÑÐµÐ»ÑÐ±Ð° Ð¸Ð· Ð»ÑÐºÐ°\",\n                image: \"service_1.png\",\n            },\n        },\n        {\n            mode: {\n                id: 1,\n                title: \"Ð¡ÑÐµÐ½Ð´Ð¾Ð²Ð°Ñ ÑÑÑÐµÐ»ÑÐ±Ð° Ð¸Ð· Ð°ÑÐ±Ð°Ð»ÐµÑÐ°\",\n                image: \"service_2.png\",\n            },\n        },\n    ]\n}","import React from 'react'\nimport {Video, Grommet} from 'grommet'\n\nexport class Auth extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <Video controls=\"over\" fit=\"cover\">\n                <source key=\"video\" src=\"clip.mp4\" type=\"video/mp4\" />\n                <track\n                    key=\"cc\"\n                    label=\"English\"\n                    kind=\"subtitles\"\n                    srcLang=\"en\"\n                    src=\"/assets/small-en.vtt\"\n                    default\n                />\n            </Video>\n        )\n    }\n}","import React from 'react'\nimport {Image, Anchor, Text, Grommet} from 'grommet'\n\nexport class CFooter extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"footer\">\n                <div className=\"container center\">\n                    <Anchor href=\"https://vk.com/dmitry_onodera\" title=\"Ð¯ Ð²Ð¾ ÐÐºÐ¾Ð½ÑÐ°ÐºÑÐµ\" icon={<Image src=\"vk.png\"/>} hoverIndicator />\n                    <Anchor href=\"https://www.instagram.com/deep_forest_crossbow\" title=\"Ð¯ Ð² Instagram\" icon={<Image src=\"instagram.png\" />} hoverIndicator />\n                </div>\n                <div className=\"container center\">\n                    <Text color=\"white\" margin=\"large\" size=\"large\">Copyright ÐÐ¾Ð»Ð³Ð°Ð¿ÐºÐ¸Ð½ Ð.Ð, 2020Ð³.</Text>\n                </div>\n            </div>\n        )\n    }\n}","import './App.css';\nimport {config} from './config'\nimport {CHeader} from './components/header/CHeader'\nimport {CFooter} from './components/footer/CFooter'\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\n\nfunction App() {\n  // Ð·Ð´ÐµÑÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑ Ð³Ð»Ð¾Ð±Ð°Ð»ÑÐ½Ð¾Ðµ ÑÐ¾ÑÑÐ¾ÑÐ½Ð¸Ðµ\n  //const \n\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <CHeader/>\n        <Router>\n          <Switch>\n          \n            {config.pages.map(route => {\n              return (\n                <Route exact={() => {if (route.route == '/') return true; return false;}} path={route.route} component={route.component}/>\n              )\n            })}\n\n            <Redirect from=\"/\" to=\"/main\" />\n          </Switch>\n        </Router>\n      </div>\n      <CFooter/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}